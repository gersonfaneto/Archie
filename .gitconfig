[core]
  excludesfile = ~/.gitignore
  editor = nvim
  ignorecase = false
  autocrlf = input

[user]
  name = Gerson Ferreira
  email = gersonfaneto.dev@gmail.com

[init]
  defaultBranch = main

[github]
  user = gersonfaneto

[push]
  default = simple

[color]
  status = auto
  diff = auto
  branch = auto
  interactive = auto
  grep = auto
  ui = auto

[alias]
  # Use "fzf" as a file selector for "git add"
  a = "!git status --short | awk '{printf $2}' | fzf | xargs git add"
  # Quickly init a new git repo
  i = init
  # Quickly diff the currently changed files
  d = diff
  # Quickly checkout a branch
  co = checkout
  # Quickly checkout the "main" branch
  cm = checkout main
  # Quickly checkout the "dev" branch
  cd = checkout dev
  # Quickly checkout the "build" branch
  cb = checkout build
  # Quickly commit the currently staged files
  ci = commit
  # Quickly add and commit the currently changed files
  ca = commit --all
  # Push the changes on the current local branch to the remote
  ps = "!git push origin $(git rev-parse --abbrev-ref HEAD)"
  # Pull the changes from the remote to the current local branch
  pl = "!git pull origin $(git rev-parse --abbrev-ref HEAD)"
   # Show the status of the current branch
  st = status
  # A minimal version of "st"
  ss = status --short --branch
  # Show the log for a specific commit, but only the file names are displayed
  sf = show --name-only
  # Quickly manipulate branches
  br = branch
  # Show all the branchs
  ba = branch --all
  # Show all the merged branches
  bm = branch --merged
  # Show all the non merged branches
  bn = branch --no-merged
  # Use "fzf" as a commit selector and display the diffs from selected commits
  df = "!git hist | fzf | awk '{print $2}' | xargs -I {} git diff {}^ {}"
  # Show the history of the commits in a minimal version (Message, date, author, ...) 
  hist = log --pretty=format:\"%Cgreen%h %Creset%cd %Cblue[%cn] %Creset%s%C(yellow)%d%C(reset)\" --graph --date=relative --decorate --all 
  # Show a more detailed version of the commit history (Complete message, date, author, files, ...)
  llog = log --graph --name-status --pretty=format:\"%C(red)%h %C(reset)(%cd) %C(green)%an %Creset%s %C(yellow)%d%Creset\" --date=relative
  # Fetch the remote and show the commits ahead of the local branch
  incoming = "!git fetch --quiet && git log --pretty=format:'%C(yellow)%h %C(white)- %C(red)%an %C(white)- %C(cyan)%d%Creset %s %C(white)- %ar%Creset' ..@{u}"
  # Fetch the remote and show the commits ahead of the remote
  outgoing = "!git fetch --quiet && git log --pretty=format:'%C(yellow)%h %C(white)- %C(red)%an %C(white)- %C(cyan)%d%Creset %s %C(white)- %ar%Creset' @{u}.."
  # Quickly clear the staging area
  unstage = reset HEAD --
  # Uses "fzf" to selecte modified (tracked) files and undo their changes
  undo = "!git checkout -- | awk '{printf $2}' | fzf | xargs git restore"
  # Reset to one commit behind
  rollback = reset --soft HEAD~1
  # List all the commiters/authors on a repo and rank them
  committers = "!git log | grep Author | sort | uniq -c | sort -n -r"
