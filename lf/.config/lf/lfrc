# vim=ft:conf

set previewer ~/.config/lf/scripts/previwer.sh
set cleaner ~/.config/lf/scripts/cleaner.sh

set icons true
set drawbox true
set ignorecase true

cmd open ${{
  case $(file --mime-type "$f" -bL) in
    text/*|application/json) $EDITOR "$f" ;;
    *) xdg-open "$f" ;;
   esac
}}

cmd mkdir %{{
  printf "Directory Name: "
  read ans
  mkdir $ans
}}

cmd mkfile %{{
  printf "File Name: "
  read ans
  touch $ans
}}

cmd chmod %{{
  printf "Mode Bits: "
  read ans

  for file in "$fx"; do
    chmod $ans $file
  done

  lf -remote 'send reload'
}}

cmd unarchive %{{
  case "$f" in
    *.zip) unzip "$f" ;;
    *.tar.gz) tar -xzvf "$f" ;;
    *.tar.bz2) tar -xjvf "$f" ;;
    *.tar) tar -xvf "$f" ;;
    *) echo "Unsupported format!" ;;
  esac
}}

cmd zip %zip -r "$f" "$f"
cmd tar %tar cvf "$f.tar" "$f"
cmd targz %tar cvzf "$f.tar.gz" "$f"
cmd tarbz2 %tar cjvf "$f.tar.bz2" "$f"

cmd trash %{{
  files=$(printf "$fx" | tr '\n' ';')

  while [ "$files" ]; do
    file=${files%%;*}

    trash-put "$(basename "$file")"

    if [ "$files" = "$file" ]; then
      files=''
    else
      files="${files#*;}"
    fi
  done
}}

map m
map o
map n
map "'"
map '"'
map d
map c
map e
map f

map az zip
map at tar
map ag targz
map ab tarbz2
map au unarchive

map ee $$EDITOR "$f"
map u $view "$f"

map dd trash

map . set hidden!
map DD delete
map p paste
map x cut
map y copy
map <enter> open
map mf mkfile
map md mkdir
map ch chmod
map r rename
map br $vimv $fx
map H top
map L bottom
map R reload
map C clear
map U unselect

map gG cd ~/Developer/GitHub
map gD cd ~/Documents
map gd cd ~/Downloads
map gn cd ~/Notes
map gp cd ~/Pictures
map gv cd ~/Videos
map gc cd ~/.config
map gs cd ~/.local/bin
map gt cd ~/.local/share/Trash/files
map gm cd /run/media/gerson
